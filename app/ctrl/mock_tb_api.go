// Code generated by mockery v1.0.0. DO NOT EDIT.

package ctrl

import mock "github.com/stretchr/testify/mock"
import tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"

// mockTbAPI is an autogenerated mock type for the tbAPI type
type mockTbAPI struct {
	mock.Mock
}

// GetChatAdministrators provides a mock function with given fields: config
func (_m *mockTbAPI) GetChatAdministrators(config tgbotapi.ChatConfig) ([]tgbotapi.ChatMember, error) {
	ret := _m.Called(config)

	var r0 []tgbotapi.ChatMember
	if rf, ok := ret.Get(0).(func(tgbotapi.ChatConfig) []tgbotapi.ChatMember); ok {
		r0 = rf(config)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]tgbotapi.ChatMember)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.ChatConfig) error); ok {
		r1 = rf(config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUpdatesChan provides a mock function with given fields: config
func (_m *mockTbAPI) GetUpdatesChan(config tgbotapi.UpdateConfig) (tgbotapi.UpdatesChannel, error) {
	ret := _m.Called(config)

	var r0 tgbotapi.UpdatesChannel
	if rf, ok := ret.Get(0).(func(tgbotapi.UpdateConfig) tgbotapi.UpdatesChannel); ok {
		r0 = rf(config)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(tgbotapi.UpdatesChannel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.UpdateConfig) error); ok {
		r1 = rf(config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PinChatMessage provides a mock function with given fields: config
func (_m *mockTbAPI) PinChatMessage(config tgbotapi.PinChatMessageConfig) (tgbotapi.APIResponse, error) {
	ret := _m.Called(config)

	var r0 tgbotapi.APIResponse
	if rf, ok := ret.Get(0).(func(tgbotapi.PinChatMessageConfig) tgbotapi.APIResponse); ok {
		r0 = rf(config)
	} else {
		r0 = ret.Get(0).(tgbotapi.APIResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.PinChatMessageConfig) error); ok {
		r1 = rf(config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Send provides a mock function with given fields: c
func (_m *mockTbAPI) Send(c tgbotapi.Chattable) (tgbotapi.Message, error) {
	ret := _m.Called(c)

	var r0 tgbotapi.Message
	if rf, ok := ret.Get(0).(func(tgbotapi.Chattable) tgbotapi.Message); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(tgbotapi.Message)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.Chattable) error); ok {
		r1 = rf(c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UnpinChatMessage provides a mock function with given fields: config
func (_m *mockTbAPI) UnpinChatMessage(config tgbotapi.UnpinChatMessageConfig) (tgbotapi.APIResponse, error) {
	ret := _m.Called(config)

	var r0 tgbotapi.APIResponse
	if rf, ok := ret.Get(0).(func(tgbotapi.UnpinChatMessageConfig) tgbotapi.APIResponse); ok {
		r0 = rf(config)
	} else {
		r0 = ret.Get(0).(tgbotapi.APIResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(tgbotapi.UnpinChatMessageConfig) error); ok {
		r1 = rf(config)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
