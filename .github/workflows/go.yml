name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Turn on debug mode if needed
        run: |
          export DEBUG=${DEBUG:-false}
          if [[ "$DEBUG" == "true" ]]; then
            env
          fi
        env:
          DEBUG: ${{secrets.DEBUG}}

      - name: Install go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Run tests and extract coverage
        run: |
          cd app
          go test -mod=vendor -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "_mock.go" > $GITHUB_WORKSPACE/profile.cov
        env:
          CGO_ENABLED: 0

      - name: Install golangci-lint and goveralls
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.24.0
          go get -u github.com/mattn/goveralls

      - name: Run linters
        run: $GITHUB_WORKSPACE/golangci-lint run --config .golangci.yml ./...
        env:
          GOFLAGS: "-mod=mod"
          CGO_ENABLED: 0

      - name: Submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOFLAGS: "-mod=mod"
          CGO_ENABLED: 0
